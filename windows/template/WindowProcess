#include <Windows.h>
#include <windowsx.h>
#include <stdio.h>

#define WIN32_LEAN_AND_MEAN
#define WINDOW_CLASS_NAME "WINCLASS1"

LRESULT CALLBACK WindowProc(HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam)
{
	PAINTSTRUCT ps;
	HDC	hdc;
	
	switch (msg)
	{
	case WM_CREATE:
		{
		//do initialization stuff here
		return (0);
		}
		break;
	case WM_PAINT:
		{
			hdc = BeginPaint(hwnd,&ps);
			//do painting here
			EndPaint(hwnd,&ps);
			return (0);
		}
		break;
	case WM_DESTROY:
		{
			PostQuitMessage(0);
			//return success
			return (0);
		}
		break;
	default:
		break;
	}

	return DefWindowProc(hwnd,msg,wparam,lparam);
}

int WINAPI WinMain(HINSTANCE hinstance, HINSTANCE hprevinstance,LPSTR lpcmdline,int ncmdshow) 
{
	WNDCLASSEX winclass;
	HWND hwnd;
	MSG msg;

	winclass.cbSize = sizeof(WNDCLASSEX);
	winclass.style = CS_DBLCLKS | CS_OWNDC | CS_HREDRAW | CS_VREDRAW;
	winclass.lpfnWndProc = WindowProc;
	winclass.cbClsExtra = 0;
	winclass.cbWndExtra = 0;
	winclass.hInstance = hinstance;
	winclass.hIcon = LoadIcon(NULL, IDI_APPLICATION);
	winclass.hCursor = LoadCursor(NULL, IDC_ARROW);
	winclass.hbrBackground = (HBRUSH)GetStockObject(BLACK_BRUSH);
	winclass.lpszMenuName = NULL;
	winclass.lpszClassName = WINDOW_CLASS_NAME;
	winclass.hIconSm = LoadIcon(NULL, IDI_APPLICATION);

	if (!RegisterClassEx(&winclass))
		return(0);

	hwnd = CreateWindowEx(
		NULL,
		WINDOW_CLASS_NAME,
		"Your Basic Window",
		WS_OVERLAPPEDWINDOW | WS_VISIBLE,
		0, 0,
		400, 400,
		NULL,
		NULL,
		hinstance,
		NULL
	);
	
	//ShowWindow(&hwnd , ncmdshow);		
	
	if ( 0==hwnd || NULL==hwnd )
		return (0);

	while (GetMessage(&msg, NULL, 0, 0))
	{
		//translate any accelerator keys
		TranslateMessage(&msg);

		//send the message to the window proc
		DispatchMessage(&msg);
	}

	return(msg.wParam);
}
